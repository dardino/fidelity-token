version: '3.5'
services:
  # nodo di bootstrap, non fa mining
  bootstrap:
    build: eth-node
    restart: on-failure
    container_name: bootstrap
    image: my_bootstrap:latest
    hostname: bootstrap
    links:
      - netstats
    entrypoint: /root/start.sh
    command: '--datadir=~/.ethereum/devchain --nodekeyhex=091bd6067cb4612df85d9c1ff85cc47f259ced4d4cd99816b14f35650f59c322 --rpcapi "db,personal,eth,net,web3,miner" --rpccorsdomain="*" --networkid=63214 --rpc --rpcaddr="0.0.0.0" --rpcport "8545"'
    volumes:
     - ./eth-node/eth-files/password:/root/files/password:rw
     - ./eth-node/eth-files/genesis:/root/files/genesis:rw
     - ./eth-node/eth-files/keystore:/root/.ethereum/devchain/keystore:rw
     - /etc/localtime:/etc/localtime:ro
    ports:
      - "30303:30303"
      - "30303:30303/udp"
      - "8545:8545"
    networks: 
      my_net:
        ipv4_address: 172.21.0.3
        aliases: 
          - bootstrap

  # docker per l'applicazione Web API in dotnet core
  webapi:
    build: my-webapi
    restart: on-failure
    container_name: webapi
    image: my_webapi:latest
    hostname: webapi
    links:
      - bootstrap
      - netstats
    entrypoint: dotnet
    command: run --configuration Release --watch
    working_dir: /app
    volumes:
      - ./my-webapi/src:/app:rw
      - ./my-webapi/_remote_bin:/app/bin:rw
      - ./my-webapi/_remote_obj:/app/obj:rw
    ports:
      - "5000:80"
      - "5001:443"
    networks: 
      my_net:
        ipv4_address: 172.21.0.4
        aliases: 
          - webapi

  # nodo per l'applicazione client
  webcli:
    build: my-wallet
    restart: on-failure
    container_name: webcli
    image: my_webcli:latest
    hostname: wallet
    links:
      - webapi
      - bootstrap
      - netstats
    entrypoint: bash
    command: -c /root/start.sh
    volumes:
      - ./my-wallet/wallet-app:/root/app:rw
      - /root/app/node_modules
      - /etc/localtime:/etc/localtime:ro
    ports:
      - "4200:4200"
    networks: 
      my_net:
        ipv4_address: 172.21.0.5
        aliases: 
          - webcli

  # nodo di monitoring di cosa accade
  netstats:
    build: eth-netstats
    restart: on-failure
    container_name: netstats
    image: my_netstats:latest
    environment:
      - WS_SECRET=eth-net-stats-secret
    volumes:
      - /etc/localtime:/etc/localtime:ro
    ports:
      - "3000:3000"
    networks: 
      my_net:
        ipv4_address: 172.21.0.6
        aliases: 
          - netstats
          
  # nodo peer che far√† mining
  eth:
    build: eth-node
    restart: on-failure
    hostname: eth
    image: my_eth:latest
    links:
      - truffle
      - webapi
      - webcli
      - bootstrap
      - netstats
    entrypoint: /root/start.sh
    volumes:
      - ./eth-node/eth-files/password:/root/files/password:ro
      - ./eth-node/eth-files/genesis:/root/files/genesis:ro
      - ./eth-node/eth-files/keystore:/root/.ethereum/devchain/keystore:rw
      - /etc/localtime:/etc/localtime:ro
    command: '--datadir=~/.ethereum/devchain --rpccorsdomain="*" --rpcapi "db,personal,eth,net,web3,miner"  --mine --minerthreads=2 --etherbase 0x007ccffb7916f37f7aeef05e8096ecfbe55afc2f --networkid=63214 --rpc --bootnodes="enode://288b97262895b1c7ec61cf314c2e2004407d0a5dc77566877aad1f2a36659c8b698f4b56fd06c4a0c0bf007b4cfb3e7122d907da3b005fa90e724441902eb19e@XXX:30303"'
    networks: 
      my_net:
        aliases: 
          - eth

  truffle:
    build: my-truffle
    container_name: truffle
    image: my_truffle:latest
    volumes:
      - /app:/usr/src/app:rw
      - /etc/localtime:/etc/localtime:ro
    links:
      - bootstrap
    networks:
      my_net:
        ipv4_address: 172.21.0.200
        aliases: 
          - truffle

# configurazione ip di rete
networks:
  my_net:
    name: my_net
    ipam: 
      config:
      - subnet: 172.21.0.0/24
